<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label16.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="label18.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>